<?php

/**
 * @file
 * Module install file.
 */

/**
 * Implements hook_requirements().
 */
function search_api_attachments_requirements($phase) {
  $config = config('search_api_attachments.settings');
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    // We only need to test Java if we're using a local tika extractor.
    if ($config->get('search_api_attachments_extract_using') == 'tika') {
      $temp = tempnam(file_directory_temp(), 'asa');
      $cmd = $config->get('search_api_attachments_java') . ' -version > ' . $temp . ' 2>&1';
      if (strpos(ini_get('extension_dir'), 'MAMP/')) {
        $cmd = 'export DYLD_LIBRARY_PATH=""; ' . $cmd;
      }
      exec($cmd);
      $stderror = file_get_contents($temp);
      $found = preg_match('/Runtime Environment/', $stderror);

      if (!$found) {
        $requirements['search_api_attachments_java'] = array(
          'title' => $t('Java'),
          'value' => $t('Java executable not found'),
          'description' => $t('Could not execute a java command.  You may need to set the path of the correct java executable as the variable \'search_api_attachments_java\' in settings.php.'),
          'severity' => REQUIREMENT_ERROR,
        );
      }
    }

    // Test if php-iconv is enabled on the server.
    $requirements['search_api_attachments_iconv'] = array(
      'title' => $t('iconv php function'),
      'description' => $t('Test if iconv php function is known. You will have an error when trying to index .txt files with search API attachments if this function is not present.'),
    );

    if (function_exists('iconv')) {
      $requirements['search_api_attachments_iconv']['value'] = $t('Found');
      $requirements['search_api_attachments_iconv']['severity'] = REQUIREMENT_OK;
    }
    else {
      $requirements['search_api_attachments_iconv']['value'] = $t('Not found');
      $requirements['search_api_attachments_iconv']['severity'] = REQUIREMENT_ERROR;
    }
  }
  return $requirements;
}

/**
 * Implements hook_uninstall().
 */
function search_api_attachments_uninstall() {
  config_clear('search_api_attachments.settings', 'search_api_attachments_tika_path');
  config_clear('search_api_attachments.settings', 'search_api_attachments_tika_jar');
  config_clear('search_api_attachments.settings', 'search_api_attachments_extracting_servlet_path');
}

/**
 * Implements hook_schema().
 */
function search_api_attachments_schema() {
  // Create a standard Backdrop cache table.
  // We'll be using this store file extractions.
  $schema['cache_search_api_attachments'] = backdrop_get_schema_unprocessed('system', 'cache');
  return $schema;
}

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function search_api_attachments_update_7101() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function search_api_attachments_update_7102() { }

// TODO The old hook_update_N functions cannot be applied to Backdrop.
function search_api_attachments_update_7103() { }

/**
 * Implements hook_update_last_removed().
 */
function search_api_attachments_update_last_removed() {
  return 7103;
}

/**
 * Migrate search_api_attachments variables to config.
 */
function search_api_attachments_update_1000() {
  $config = config('search_api_attachments.settings');
  $config->set('search_api_attachments_extract_using', update_variable_get('search_api_attachments_extract_using', 'tika'));
  $config->set('search_api_attachments_debug', update_variable_get('search_api_attachments_debug', array()));
  $config->set('search_api_attachments_tika_path', update_variable_get('search_api_attachments_tika_path', ''));
  $config->set('search_api_attachments_tika_jar', update_variable_get('search_api_attachments_tika_jar', 'tika-app-1.6.jar'));
  $config->set('search_api_attachments_java', update_variable_get('search_api_attachments_java', 'java'));
  $config->set('search_api_attachments_tika_server_host', update_variable_get('search_api_attachments_tika_server_host', 'localhost'));
  $config->set('search_api_attachments_tika_server_port', update_variable_get('search_api_attachments_tika_server_port', '9998'));
  $config->set('search_api_attachments_python_pdf2txt_path', update_variable_get('search_api_attachments_python_pdf2txt_path', '/usr/bin'));
  $config->set('search_api_attachments_python_pdf2txt_script', update_variable_get('search_api_attachments_python_pdf2txt_script', 'pdf2txt'));
  $config->set('search_api_attachments_extracting_servlet_path', update_variable_get('search_api_attachments_extracting_servlet_path', 'update/extract'));
  $config->set('search_api_attachments_preserve_cache', update_variable_get('search_api_attachments_preserve_cache', array()));
  $config->save();

  update_variable_del('search_api_attachments_extract_using');
  update_variable_del('search_api_attachments_debug');
  update_variable_del('search_api_attachments_tika_path');
  update_variable_del('search_api_attachments_tika_jar');
  update_variable_del('search_api_attachments_java');
  update_variable_del('search_api_attachments_tika_server_host');
  update_variable_del('search_api_attachments_tika_server_port');
  update_variable_del('search_api_attachments_python_pdf2txt_path');
  update_variable_del('search_api_attachments_python_pdf2txt_script');
  update_variable_del('search_api_attachments_extracting_servlet_path');
  update_variable_del('search_api_attachments_preserve_cache');
}

/**
 * Implements hook_install().
 */
function search_api_attachments_install() {
  // Dynamically generated variable data was detected.
}
